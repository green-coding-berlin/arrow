---
name: Arrow test container
author: Danilo Ješić
version: 1

services:
  arrow-tests:
    image: ubuntu:focal
    cmd: bash
    setup-commands:
      - echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
      - export DEBIAN_FRONTEND=noninteractive
      - export TZ=Etc/UTC
      - WORKDIR=/tmp/repo/
      - apt-get update -y
      - apt-get install -y -q --no-install-recommends apt-transport-https software-properties-common wget git
      - apt-get install -y -q --no-install-recommends build-essential cmake ninja-build python3-dev python3-pip python3-venv 
      - apt-get clean && rm -rf /var/lib/apt/lists*
      - pip3 install -U pip setuptools
      - MINICONDA=$WORKDIR/miniconda-for-arrow
      - LIBRARY_INSTALL_DIR=$WORKDIR/local-libs
      - CPP_BUILD_DIR=$WORKDIR/arrow-cpp-build
      - ARROW_ROOT=$(pwd)
      - export ARROW_HOME=$WORKDIR/dist
      - export LD_LIBRARY_PATH=$ARROW_HOME/lib:$LD_LIBRARY_PATH
      - python3 -m venv $WORKDIR/venv
      - bash source /tmp/repo/venv/bin/activate # subprocess.CalledProcessError: Command '['docker', 'exec', 'arrow-tests', 'sh', '-c', 'source $WORKDIR/venv/bin/activate']' returned non-zero exit status 127. Stderr: sh: 1: source: not found

      - git config --global --add safe.directory $ARROW_ROOT
      
      - pip install -r $ARROW_ROOT/python/requirements-build.txt

      - mkdir -p $CPP_BUILD_DIR
      - pushd $CPP_BUILD_DIR
      - cmake -GNinja -DCMAKE_BUILD_TYPE=DEBUG 
        -DCMAKE_INSTALL_PREFIX=$ARROW_HOME 
        -DCMAKE_INSTALL_LIBDIR=lib 
        -DARROW_BUILD_STATIC=OFF 
        -DARROW_WITH_BZ2=ON 
        -DARROW_WITH_ZLIB=ON 
        -DARROW_WITH_ZSTD=ON 
        -DARROW_WITH_LZ4=ON 
        -DARROW_WITH_SNAPPY=ON 
        -DARROW_WITH_BROTLI=ON 
        -DARROW_PYTHON=ON 
        $ARROW_ROOT/cpp

      - ninja install
      - popd

      - pushd $ARROW_ROOT/python
      - rm -rf build/  # remove any pesky pre-existing build directory

      - export CMAKE_PREFIX_PATH=${ARROW_HOME}${CMAKE_PREFIX_PATH:+:${CMAKE_PREFIX_PATH}}
      - export PYARROW_BUILD_TYPE=Debug
      - export PYARROW_CMAKE_GENERATOR=Ninja
      
      - python setup.py develop
      - pip install -r $ARROW_ROOT/python/requirements-test.txt

      - pip install -r $ARROW_ROOT/python/requirements-test.txt
      - apt update -y
      - apt install jq procps wget git-core python3-pip curl -y
      - curl -O https://gitlab.com/softawere-hackathon/softawere/-/raw/main/gitlab-metric-script/requirements-metrics.txt
      - pip3 install -r requirements-metrics.txt
      
      - export CI_JOB_AFTER_REQUIREMENTS_STARTED_AT=$(date +%s) ## Your test starts here !   
      - py.test pyarrow
      - curl -s https://gitlab.com/softawere-hackathon/softawere/-/raw/main/gitlab-metric-script/get_metrics.py | python3



flow:
  - name: Run arrow tests
    container: arrow-tests
    commands:
      - type: console
        command: sleep 5
        note: Starting the arrow tests